(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{255:function(s,a,t){"use strict";t.r(a);var n=t(0),r=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"nginx-匹配规则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx-匹配规则"}},[s._v("#")]),s._v(" nginx 匹配规则")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("Nginx 的 location 实现了对请求的细分处理，有些 "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("URI")]),s._v(" 返回静态内容，有些分发到后端服务器等，今天来彻底弄懂它的匹配规则\n\nNginx location 的配置\n\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("语法规则\n location "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" 空 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" url "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" … "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("修饰符\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" 表示精准匹配。完全相等时，才会命中规则。\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),s._v(" 表示区分大小写的正则匹配。\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" 表示不区分大小写的正则匹配。\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),s._v(" 表示最佳匹配，即命中后采用该规则，不再进行后续的查找。\n\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("匹配过程\n精准匹配\n最佳匹配\n正则匹配\n最长匹配前缀字符串\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])])])}),[],!1,null,null,null);a.default=r.exports}}]);