(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{177:function(t,e,i){"use strict";i.r(e);var s=i(0),_=Object(s.a)({},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"content"},[t._m(0),t._v(" "),i("p",[t._v("HTTP 协议是超文本传输协议，从 www 浏览器传输到本地浏览器的一种传输协议，网站的图片，js，css 都是基于 http 协议的。")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),t._m(23),t._v(" "),t._m(24),t._v(" "),i("p",[t._v("http 缓存策略图：")]),t._v(" "),t._m(25),t._v(" "),t._m(26),t._v(" "),t._m(27),t._v(" "),i("p",[t._v("HTTP/2 所有性能增强的核心在于新的二进制分帧层，它定义了如何封装 HTTP 消息并在客户端与服务器之间传输。")]),t._v(" "),t._m(28),t._v(" "),i("p",[t._v("HTTP/1.x 协议以换行符作为纯文本的分隔符，而 HTTP/2 将所有传输的信息分割为更小的消息和帧，并采用二进制格式对它们编码。")]),t._v(" "),t._m(29),t._v(" "),i("p",[t._v("新的二进制分帧机制改变了客户端与服务器之间交换数据的方式。 为了说明这个过程，我们需要了解 HTTP/2 的三个概念：")]),t._v(" "),i("p",[t._v("数据流：已建立的连接内的双向字节流，可以承载一条或多条消息。（一次http请求）\n消息：与逻辑请求或响应消息对应的完整的一系列帧。（一个请求，或一个响应）\n帧：HTTP/2 通信的最小单位，每个帧都包含帧头，至少也会标识出当前帧所属的数据流。（http标头，消息负载等）\n这些概念的关系总结如下：")]),t._v(" "),i("p",[t._v("所有通信都在一个 TCP 连接上完成，此连接可以承载任意数量的双向数据流。\n每个数据流都有一个唯一的标识符和可选的优先级信息，用于承载双向消息。\n每条消息都是一条逻辑 HTTP 消息（例如请求或响应），包含一个或多个帧。\n帧是最小的通信单位，承载着特定类型的数据，例如 HTTP 标头、消息负载，等等。 来自不同数据流的帧可以交错发送，然后再根据每个帧头的数据流标识符重新组装。")]),t._v(" "),i("p",[t._v("理解了这张图，HTTP2 就基本上懂了。")]),t._v(" "),t._m(30),t._v(" "),i("p",[t._v("服务器端推送：")]),t._v(" "),t._m(31),t._v(" "),i("p",[t._v("标头压缩:")]),t._v(" "),t._m(32),t._v(" "),i("p",[t._v("图中可以看到：")]),t._v(" "),i("p",[t._v("1、所有的数据流共享一个TCP连接。")]),t._v(" "),i("p",[t._v("2、数据流可以带上权重标识，可以在传输时优先获得资源分配。")]),t._v(" "),i("p",[t._v("3、传输中是以最小单位帧开始传输的，每个帧都有一个标识，标识属于哪个流，哪个消息中的，所以帧在传输时可以不按顺序，在接收端再根据帧重新组合起来即可。")]),t._v(" "),i("p",[t._v("4、服务器可以对一个客户端请求发送多个响应。")]),t._v(" "),i("p",[t._v("5、标头压缩，使用HPACK 压缩格式压缩请求和响应标头元数据，体积更小，且可复用，要求客户端和服务器同时维护和更新一个包含之前见过的标头字段的索引列表。")]),t._v(" "),t._m(33),t._v(" "),i("p",[t._v("用户不直接请求服务器，而是请求反向代理服务器，再由反向代理服务器转发请求到其他服务器。")]),t._v(" "),t._m(34),t._v(" "),i("p",[t._v("反向代理的作用：")]),t._v(" "),t._m(35),t._v(" "),i("p",[t._v("负载均衡示意图：")]),t._v(" "),t._m(36),t._v(" "),i("hr"),t._v(" "),i("div",{staticClass:"tip custom-block"},[i("p",{staticClass:"custom-block-title"},[t._v("参考链接")]),t._v(" "),i("p",[i("a",{attrs:{href:"https://developers.google.com/web/fundamentals/performance/http2/?hl=zh-cn#_2",target:"_blank",rel:"noopener noreferrer"}},[t._v("http2 简介"),i("OutboundLink")],1)])])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"http-协议常用知识点总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http-协议常用知识点总结","aria-hidden":"true"}},[this._v("#")]),this._v(" HTTP 协议常用知识点总结")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"输入一个网址后发生了什么？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#输入一个网址后发生了什么？","aria-hidden":"true"}},[this._v("#")]),this._v(" 输入一个网址后发生了什么？")])},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ul",[i("li",[t._v("1、输入网址并回车。")]),t._v(" "),i("li",[t._v("2、解析域名。")]),t._v(" "),i("li",[t._v("3、浏览器发送 HTTP 请求。")]),t._v(" "),i("li",[t._v("4、服务器处理请求。")]),t._v(" "),i("li",[t._v("5、服务器返回 HTML 相应。")]),t._v(" "),i("li",[t._v("6、浏览器处理 HTML 页面。")]),t._v(" "),i("li",[t._v("7、继续请求其他资源。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"在-tcp-ip-协议栈中的位置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在-tcp-ip-协议栈中的位置","aria-hidden":"true"}},[this._v("#")]),this._v(" 在 TCP/IP 协议栈中的位置")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("HTTP 层。")]),this._v(" "),e("li",[this._v("TCP 层。")]),this._v(" "),e("li",[this._v("IP 层。")]),this._v(" "),e("li",[this._v("数据链路层。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"请求与相应"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#请求与相应","aria-hidden":"true"}},[this._v("#")]),this._v(" 请求与相应")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("HTTP 请求组成:请求行、消息报头、请求正文。")]),this._v(" "),e("li",[this._v("HTTP 响应组成:状态行、消息报头、响应正文。")]),this._v(" "),e("li",[this._v("请求行组成:以一个方法符号开头，后面跟着请求的 URI 和协 议的版本。")]),this._v(" "),e("li",[this._v("状态行组成:服务器 HTTP 协议的版本，服务器发回的响应状 态代码和状态代码的文本描述。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"请求方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#请求方法","aria-hidden":"true"}},[this._v("#")]),this._v(" 请求方法")])},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ul",[i("li",[t._v("GET: 请求获取 Request-URI 所标识的资源（4K 大小）。")]),t._v(" "),i("li",[t._v("POST: 在 Request-URI 所标识的资源后附加新的数据（修改数据）。")]),t._v(" "),i("li",[t._v("HEAD: 请求获取由 Request-URI 所标识的资源的响应消息报头（简易版的 get,只返回请求头）。")]),t._v(" "),i("li",[t._v("PUT: 请求服务器存储一个资源，并用 Request-URI 作为其标识（增加数据）。")]),t._v(" "),i("li",[t._v("DELETE:请求服务器删除 Request-URI 所标识的资源。")]),t._v(" "),i("li",[t._v("TRACE: 请求服务器回送收到的请求信息，主要用于测试或诊断 。")]),t._v(" "),i("li",[t._v("CONNECT:保留将来使用 。")]),t._v(" "),i("li",[t._v("OPTIONS:请求查询服务器的性能，或者查询与资源相关的选项和需求。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"http-状态码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http-状态码","aria-hidden":"true"}},[this._v("#")]),this._v(" HTTP 状态码")])},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ul",[i("li",[t._v("1xx:指示信息--表示请求已接收，继续处理 。")]),t._v(" "),i("li",[t._v("2xx:成功--表示请求已被成功接收、理解、接受 。")]),t._v(" "),i("li",[t._v("3xx:重定向--要完成请求必须进行更进一步的操作 。")]),t._v(" "),i("li",[t._v("4xx:客户端错误--请求有语法错误或请求无法实现 。")]),t._v(" "),i("li",[t._v("5xx:服务器端错误--服务器未能实现合法的请求。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"常用的请求报头"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用的请求报头","aria-hidden":"true"}},[this._v("#")]),this._v(" 常用的请求报头")])},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ul",[i("li",[t._v("Accept 请求报头域用于指定客户端接受哪些类型的信息。eg:Accept:image/gif，Accept:text/ html。")]),t._v(" "),i("li",[t._v("Accept-Charset 请求报头域用于指定客户端接受的字符集。")]),t._v(" "),i("li",[t._v("Accept-Encoding:Accept-Encoding 请求 报头域类似于 Accept，但是它是用于指定可接受的内容编码。")]),t._v(" "),i("li",[t._v("Accept-Language 请求报头域类似于 Accept，但是它是用于指定一种自然语言。")]),t._v(" "),i("li",[t._v("Authorization 请求报头域主要用于证明客户端有权查看某个资源。当浏览器访问一个页面时，如果收 到服务器的响应代码为 401(未授权)，可以发送一个包含 Authorization 请求报头域的请求，要求服务 器对其进行验证。")]),t._v(" "),i("li",[t._v("Host 请求报头域主要用于指定被请求资源的 Internet 主机和端又号，它通常从 HTTP URL 中提取出来 的，发送请求时，该报头域是必需的。")]),t._v(" "),i("li",[t._v("User-Agent 请求报头域允许客户端将它的操作系统、浏览器和其它属性告诉服务器。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"常用的响应报头"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用的响应报头","aria-hidden":"true"}},[this._v("#")]),this._v(" 常用的响应报头")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("Location 响应报头域用于重定向接受者到一个新的位置。Location 响应报头域常用在更换域名的时候。")]),this._v(" "),e("li",[this._v("Server 响应报头域包含了服务器用来处理请求的软件信息。与 User- Agent 请求报头域是相对应的。")]),this._v(" "),e("li",[this._v("WWW-Authenticate 响应报头域必须被包含在 401（未授权的）响应消息中，客户端收到 401 响应消息时候，并发送 Authorization 报头域请求服务器对其进行验证时，服务端响应报头就包含该报头域。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"常用的实体报头"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用的实体报头","aria-hidden":"true"}},[this._v("#")]),this._v(" 常用的实体报头")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("提示")]),this._v(" "),e("p",[this._v("请求和响应消息都可以传送一个实体。")]),this._v(" "),e("p",[this._v("一个实体由实体报头域和实体正文组成，但并不是说实体报头域和实体正文要在一起发送，可以只发送实体报头域。")]),this._v(" "),e("p",[this._v("实体报头定义了关于实体正文 (eg:有无实体正文)和请求所标识的资源的元信息。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("Content-Encoding 实体报头域被用作媒体类型的修饰符，它的值指示了已经被应用到实体正文的附加内容的编码，因而要获得 Content-Type 报头域中所引用的媒体类型，必须采用相应的解 码机制。")]),this._v(" "),e("li",[this._v("Content-Language 实体报头域描述了资源所用的自然语言。")]),this._v(" "),e("li",[this._v("Content-Length 实体报头域用于指明实体正文的长度，以字节方式存储的十进制数字来表示。")]),this._v(" "),e("li",[this._v("Content-Type 实体报头域用语指明发送给接收者的实体正文的媒体类型。 Last-Modified 实体报头域用于指示资源的最后修改日期和时间。 Expires 实体报头域给出响应过期的日期和时间。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"http-缓存策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http-缓存策略","aria-hidden":"true"}},[this._v("#")]),this._v(" http 缓存策略")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"cookies-和-session"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cookies-和-session","aria-hidden":"true"}},[this._v("#")]),this._v(" cookies 和 session")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("Cookies 是保存在客户端的小段文本，每当客户端发起一个请求发送会将该请求 url 下的所有 cookies 发送到服务器端。")]),this._v(" "),e("li",[this._v("Session 则保存服务器段，通过唯一的值 sessionID 来区别每一个 用户。SessionID 随每个连接请求发送到服务器，服务器根据 sessionID 来识别客户端，再通过 session 的 key 获取 session 值。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"etag-if-none-match-策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#etag-if-none-match-策略","aria-hidden":"true"}},[this._v("#")]),this._v(" Etag/if-None-Match 策略")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("Etag:web 服务器响应请求时，告诉浏览器当前资源在服务器的唯一标识(生成规则由服务器决定)。")]),this._v(" "),e("li",[this._v("If-None-Match:当资源过期时（使用 Cache-Control 标识的 max- age），发现资源具有 Etage 声明，则再次向 web 服务器请求时带 上头 If-None-Match（Etag 的值）。web 服务器收到请求后发现 有头 If-None-Match 则与被请求资源的相应校验串进行比对，决 定返回 200 或 304。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"last-modified-if-modified-since-策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#last-modified-if-modified-since-策略","aria-hidden":"true"}},[this._v("#")]),this._v(" Last-Modified/If-Modified-Since 策略")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("Last-Modified:标示这个响应资源的最后修改时间。web 服务器在响应请求时，告诉浏览器资源的最后修改时间。")]),this._v(" "),e("li",[this._v("If-Modified-Since:当资源过期时(使用 Cache-Control 标识的 max-age)，发现资源具有 Last-Modified 声明，则再次向 web 服务器请求时带上头 If-Modified-Since，表示请求时间。web 服务器收到请求后发现有头 If-Modified- Since 则与被请求资源的最后修改时间进行比对。若最后修改时间较新，说 明资源又被改动过，则响应整片资源内容(写在响应消息包体内)，HTTP 200;若最后修改时间较旧，说明资源无新修改，则响应 HTTP 304（无需包 体，节省浏览），告知浏览器继续使用所保存的 cache。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"/blog/browser-caching.jpg",alt:"http 缓存策略图"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"http2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http2","aria-hidden":"true"}},[this._v("#")]),this._v(" http2")])},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ul",[i("li",[t._v("使用二进制格式传输，更高效、更紧凑。")]),t._v(" "),i("li",[t._v("请求可以设置优先级。")]),t._v(" "),i("li",[t._v("对报头压缩，降低开销。")]),t._v(" "),i("li",[t._v("多路复用，一个网络连接实现并行请求。")]),t._v(" "),i("li",[t._v("服务器主动推送，减少请求的延迟。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"http-binary_framing_layer.svg",alt:"http2 二进制"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"数据流、消息和帧"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据流、消息和帧","aria-hidden":"true"}},[this._v("#")]),this._v(" 数据流、消息和帧")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"http-streams_messages_frames.svg",alt:"http2 数据流，消息，帧"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"http-push.svg",alt:"服务器端推送"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"http-header_compression.svg",alt:"标头压缩"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"反向代理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#反向代理","aria-hidden":"true"}},[this._v("#")]),this._v(" 反向代理")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"/blog/http-reverseProxy.png",alt:"反向代理"}})])},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ul",[i("li",[t._v("复用 DNS 查询。")]),t._v(" "),i("li",[t._v("加密和 SSL 加速。")]),t._v(" "),i("li",[t._v("负载均衡。")]),t._v(" "),i("li",[t._v("缓存静态资源。")]),t._v(" "),i("li",[t._v("压缩。")]),t._v(" "),i("li",[t._v("减速上传。")]),t._v(" "),i("li",[t._v("安全。")]),t._v(" "),i("li",[t._v("外网发布。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"/blog/http-loadBalancing.png",alt:"负载均衡"}})])}],!1,null,null,null);_.options.__file="osi-http.md";e.default=_.exports}}]);