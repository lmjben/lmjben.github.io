(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{197:function(t,e,i){"use strict";i.r(e);var s=i(0),r=Object(s.a)({},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),i("p",[t._v("OO CSS 将⻚面可重用元素抽象成一个类，用 Class 加以描述，而与其对应的 HTML 即可看成是此类的一个实例。")]),t._v(" "),i("p",[t._v("主要特点：")]),t._v(" "),t._m(2),t._v(" "),i("p",[t._v("作用：")]),t._v(" "),t._m(3),t._v(" "),i("p",[t._v("注意事项：")]),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),i("p",[t._v("CSS 有语义化的命名约定和 CSS 层的分离，团队命名统一规范，方便维护。")]),t._v(" "),i("p",[i("a",{attrs:{href:"https://en.bem.info/",target:"_blank",rel:"noopener noreferrer"}},[t._v("BEM"),i("OutboundLink")],1)]),t._v(" "),i("p",[i("a",{attrs:{href:"https://smacss.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("SMACSS"),i("OutboundLink")],1)]),t._v(" "),i("p",[i("a",{attrs:{href:"https://suitcss.github.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("SUIT"),i("OutboundLink")],1)]),t._v(" "),i("p",[i("a",{attrs:{href:"https://acss.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Atomic"),i("OutboundLink")],1)]),t._v(" "),i("hr"),t._v(" "),t._m(6),t._v(" "),i("p",[i("a",{attrs:{href:"https://cssicon.space",target:"_blank",rel:"noopener noreferrer"}},[t._v("css 图标"),i("OutboundLink")],1)]),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),i("p",[t._v("Box: CSS 布局的基本单位 。")]),t._v(" "),i("p",[t._v("Box 是 CSS 布局的对象和基本单位， 直观点来说，就是一个页面是由很多个 Box 组成的。元素的类型和 display 属性，决定了这个 Box 的类型。 不同类型的 Box， 会参与不同的 Formatting Context（一个决定如何渲染文档的容器），因此 Box 内的元素会以不同的方式渲染。让我们看看有哪些盒子：")]),t._v(" "),i("p",[t._v("block-level box:display 属性为 block, list-item, table 的元素，会生成 block-level box。并且参与 block fomatting context；")]),t._v(" "),i("p",[t._v("inline-level box:display 属性为 inline, inline-block, inline-table 的元素，会生成 inline-level box。并且参与 inline formatting context；")]),t._v(" "),i("p",[t._v("Formatting context 是 W3C CSS2.1 规范中的一个概念。它是页面中的一块渲染区域，并且有一套渲染规则，它决定了其子元素将如何定位，以及和其他元素的关系和相互作用。最常见的 Formatting context 有 Block fomatting context (简称 BFC)和 Inline formatting context (简称 IFC)。")]),t._v(" "),i("p",[t._v('FFC(Flex Formatting Contexts)直译为"自适应格式化上下文"，display 值为 flex 或者 inline-flex 的元素将会生成自适应容器（flex container），')]),t._v(" "),i("p",[t._v('GFC(GridLayout Formatting Contexts)直译为"网格布局格式化上下文"，当为一个元素设置 display 值为 grid 的时候，此元素将会获得一个独立的渲染区域，我们可以通过在网格容器（grid container）上定义网格定义行（grid definition rows）和网格定义列（grid definition columns）属性各在网格项目（grid item）上定义网格行（grid row）和网格列（grid columns）为每一个网格项目（grid item）定义位置和空间。')]),t._v(" "),i("div",{staticClass:"tip custom-block"},[i("p",{staticClass:"custom-block-title"},[t._v("tip")]),t._v(" "),i("p",[i("a",{attrs:{href:"https://www.w3cplus.com/css/an-introduction-to-object-oriented-css-oocss.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("面向对象的 CSS"),i("OutboundLink")],1)])])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"css-浅析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css-浅析","aria-hidden":"true"}},[this._v("#")]),this._v(" CSS 浅析")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"面向对象的-css"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#面向对象的-css","aria-hidden":"true"}},[this._v("#")]),this._v(" 面向对象的 CSS")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("结构和皮肤相分离。")]),this._v(" "),e("li",[this._v("容器和内容相分离。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("1.加强代码复用以便方便维护。")]),this._v(" "),e("li",[this._v("2.减小 CSS 体积。")]),this._v(" "),e("li",[this._v("3.提升渲染效率。")]),this._v(" "),e("li",[this._v("4.组件库思想、栅格布局可共用、减少选择器、方便扩展。")])])},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ul",[i("li",[t._v("不要直接定义子节点，应把共性声明放到父类。")]),t._v(" "),i("li",[t._v("抽象出可重用的元素，建好组件库，在组件库内寻找可用的元素组装⻚面。")]),t._v(" "),i("li",[t._v("往你想要扩展的对象本身增加 class 而不是他的父节点。")]),t._v(" "),i("li",[t._v("对象应保持独立性。")]),t._v(" "),i("li",[t._v("避免使用 ID 选择器，权重太高，无法重用。")]),t._v(" "),i("li",[t._v("避免位置相关的样式。")]),t._v(" "),i("li",[t._v("保证选择器相同的权重。")]),t._v(" "),i("li",[t._v("类名简短清晰语义化 OOCSS 的名字并不影响 HTML 语义化。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"css-分层"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css-分层","aria-hidden":"true"}},[this._v("#")]),this._v(" CSS 分层")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"css-技巧"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css-技巧","aria-hidden":"true"}},[this._v("#")]),this._v(" CSS 技巧")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"css-绘制技巧"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css-绘制技巧","aria-hidden":"true"}},[this._v("#")]),this._v(" CSS 绘制技巧")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("border && border-radius")]),this._v(" "),e("li",[this._v("after && before")]),this._v(" "),e("li",[this._v("box-shadow")]),this._v(" "),e("li",[this._v("linear-gradient radial-gradient")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"bfc-ifc-gfc-ffc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bfc-ifc-gfc-ffc","aria-hidden":"true"}},[this._v("#")]),this._v(" BFC IFC GFC FFC")])}],!1,null,null,null);r.options.__file="css.md";e.default=r.exports}}]);